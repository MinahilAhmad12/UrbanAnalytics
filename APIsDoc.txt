

API Documentation for Urban Analytics Project

 Authentication APIs
1.  Signup
POST api/signup/

Registers a new user and sends an OTP to verify their email.

Request Body (JSON):

{
  "username": "john_doe",
  "email": "john@example.com",
  "password": "securepassword123"
}
Response:

{
  "message": "User created successfully. Verification email sent!"
}

2.  Verify Signup OTP
POST api/verify-signup-otp/

Verifies the OTP sent during signup.

Request Body:
{
  "email": "john@example.com",
  "otp": "123456"
}
Response:
{
  "message": "Signup OTP verified successfully!"
}

3.  Resend Signup OTP
POST api/resend-signup-verification-email/

Sends a new OTP if the previous one was lost or expired.

Request Body:
{
  "email": "john@example.com"
}
Response:

{
  "message": "Verification email resent successfully."
}

4 Sign In / Obtain Token Pair
POST /signin/

Authenticate the user and return a pair of access and refresh tokens.

Request Body:

{
  "username": "testuser",
  "password": "testpassword123"
}
 If using email for login:

{
  "email": "test@example.com",
  "password": "testpassword123"
}
Response:

{
  "refresh": "eyJ0eXAiOiJKV1QiLCJh...<refresh_token>",
  "access": "eyJ0eXAiOiJKV1QiLCJh...<access_token>",
  "user": {
    "id": 1,
    "username": "testuser",
    "email": "test@example.com",
    "is_verified": true
  }
}
 The access token is used for authenticating API calls.
 The refresh token is used to get a new access token when the old one expires.

5.  Refresh Access Token
POST /api/token/refresh/

Refresh your access token using a valid refresh token.

Request Body:

{
  "refresh": "eyJ0eXAiOiJKV1QiLCJh...<refresh_token>"
}
Response:

{
  "access": "eyJ0eXAiOiJKV1QiLCJh...<new_access_token>"
}


6. Forgot Password
POST api/forgot-password/

Sends an OTP to reset the password.

Request Body:

{
  "email": "john@example.com"
}
Response:

{
  "message": "Password reset OTP sent successfully."
}
7.  Resend Forgot Password OTP
POST api/resend-forgot-password-email/

Sends the OTP again for password reset.

Request Body:

{
  "email": "john@example.com"
}
8.  Verify Forgot Password OTP
POST api/verify-forgot-password-otp/

Verifies OTP before allowing password reset.

Request Body:

{
  "email": "john@example.com",
  "otp": "123456"
}
Response:

{
  "message": "Forgot password OTP verified successfully!"
}
9.  Reset Password
POST api/reset-password/

Sets a new password after OTP verification.

Request Body:

{
  "email": "john@example.com",
  "new_password": "newsecurepassword"
}
Response:

{
  "message": "Password reset successfully."
}
 Project Management APIs
 All endpoints below require a valid JWT Access Token in the headers:

Authorization: Bearer <access_token>

10.  Create Project
POST api/projects/

Creates a new project.

Request Body:
{
  "name": "My New Project"
}
Response:

{
  "id": 1,
  "name": "My New Project",
  ...
}
11.  Get User Projects
GET my-projects/

Returns all projects belonging to the authenticated user.

Response:

[
    {
        "id": 1,
        "name": "Project 1",
        "created_at": "2025-05-15T14:40:57.865762Z",
        "areas": [
            {
                "id": 5,
                "area_type": "uc",
                "name": "Greenbelt Sector F",
                "date_range_start": "2024-01-01",
                "date_range_end": "2024-01-31",
                "selected_city": "Islamabad",
                "custom_geometry": null,
                "analyses": [
                    {
                        "analysis_type": "ndvi",
                        "tile_url": "https://tileserver.example.com/ndvi/area_1/{z}/{x}/{y}.png",
                        "stats": {
                            "max": 0.9,
                            "min": 0.3,
                            "mean": 0.67
                        }
                    },
                    {
                        "analysis_type": "thermal",
                        "tile_url": "https://tileserver.example.com/thermal/area_1/{z}/{x}/{y}.png",
                        "stats": {
                            "max": 37.6,
                            "min": 28.1,
                            "mean": 32.4
                        }
                    }
                ]
            }
        ]
    }
]


12.  Generate Report
POST projects/{project_id}/areas/{area_id}/reports/

Generates a PDF report based on analysis.

Request Body:

{
  "report_type": "environmental_summary"
}
Response: (PDF File Download)
Headers:

Content-Disposition: attachment; filename="report.pdf"
Content-Type: application/pdf


13. List All Saved Reports
GET projects/<int:project_id>/reports/

Fetch a list of all saved reports for the authenticated user.

Response:

[
  {
    "id": 10,
    "project": 1,
    "area": 5,
    "report_name": "Environmental Summary",
    "created_at": "2025-05-15T10:00:00Z",
    "file_url": "http://<your-domain>/media/reports/report_10.pdf"
  },
  {
    "id": 11,
    "project": 2,
    "area": 3,
    "report_name": "Thermal Analysis Report",
    "created_at": "2025-05-14T09:30:00Z",
    "file_url": "http://<your-domain>/media/reports/report_11.pdf"
  }
]


14. To get UCs of a particular city
GET ucs/<str:city_name>/

Response:
{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "geometry": {
        "type": "MultiPolygon",
        "coordinates": [[[...]]]  // coordinates of UC
      },
      "properties": {
        "uc_name": "UC 1",
        "city_name": "Lahore"
      }
    },
    ...
  ]
}

 
  15. To save an area
  POST areas/save/
    Request JSON:
    {
  "project_id": 1,
  "area_type": "uc",  // or "custom" or "kml"
  "name": "Greenbelt Sector F",
  "date_range_start": "2024-01-01",
  "date_range_end": "2024-01-31",

  "selected_city": "Islamabad",  // Only if area_type = "uc"
  "uc_ids": [1, 3, 5],           // Only if area_type = "uc"

  "custom_geometry": null,      // Only if area_type = "custom"
  "kml_file": null,             // If you're not using it now

  "analyses": [
    {
      "analysis_type": "ndvi",
      "tile_url": "https://tileserver.example.com/ndvi/area_1/{z}/{x}/{y}.png",
      "stats": {
        "mean": 0.67,
        "min": 0.3,
        "max": 0.9
      }
    },
    {
      "analysis_type": "thermal",
      "tile_url": "https://tileserver.example.com/thermal/area_1/{z}/{x}/{y}.png",
      "stats": {
        "mean": 32.4,
        "min": 28.1,
        "max": 37.6
      }
    }
  ],

  "map_state": {
    "active_layer": "ndvi",
    "toggle_state": {
      "ndvi": true,
      "thermal": false,
      "aqi": true
    },
    "zoom_level": 12.5,
    "center_coords": {
      "lat": 33.6844,
      "lng": 73.0479
    },
    "basemap_style": "satellite"
  }
}

Response JSON:
{
    "detail": "Area and analyses saved successfully",
    "area_id": 5
}

16. To view an area of a project

GET projects/<int:project_id>/areas/<int:area_id>/view/

Response JSON:
{
    "area": {
        "id": 4,
        "area_type": "uc",
        "name": "Greenbelt Sector F",
        "date_range_start": "2024-01-01",
        "date_range_end": "2024-01-31",
        "selected_city": "Islamabad",
        "custom_geometry": null,
        "analyses": [
            {
                "analysis_type": "ndvi",
                "tile_url": "https://tileserver.example.com/ndvi/area_1/{z}/{x}/{y}.png",
                "stats": {
                    "max": 0.9,
                    "min": 0.3,
                    "mean": 0.67
                }
            },
            {
                "analysis_type": "thermal",
                "tile_url": "https://tileserver.example.com/thermal/area_1/{z}/{x}/{y}.png",
                "stats": {
                    "max": 37.6,
                    "min": 28.1,
                    "mean": 32.4
                }
            }
        ]
    },
    "map_state": {
        "center_coords": {
            "lat": 33.6844,
            "lng": 73.0479
        },
        "zoom_level": 12.5,
        "active_layer": "ndvi",
        "toggle_state": {
            "aqi": true,
            "ndvi": true,
            "thermal": false
        }
    }
}

17. To delete an area 

DELETE project-area/<int:area_id>/delete/

18. Analysis of an area
    POST analyze/
    For area_type = "uc"

    Request JSON:
      {
    "area_type": "uc",
    "analysis_type": "ndvi",
    "start_date": "2022-06-01",
    "end_date": "2023-06-30",
    "city_name": "Lahore"
      }
    Response JSON:

    {
    "message": "NDVI analysis performed",
    "results": [
        {
            "uc_name": "Androon Texali Gate",
            "city_name": "Lahore",
            "error": "0",
            "map_layer": {
                "urlFormat": "https://earthengine.googleapis.com/v1/projects/urbananalytics-460415/maps/21419b68dab76fdab699fa0e8edb9343-761a46cd201ff7ca7d01ef623ec2f76b/tiles/{z}/{x}/{y}",
                "mapid": "projects/urbananalytics-460415/maps/21419b68dab76fdab699fa0e8edb9343-761a46cd201ff7ca7d01ef623ec2f76b",
                "token": ""
            },
            "stats": {
                "mean": 0.21453343138065312,
                "min": -0.025582932124988182,
                "max": 0.5962898570295225,
                "std_dev": 0.1596162137808899
            }
        },
        {
            "uc_name": "Ameen Pura",
            "city_name": "Lahore",
            "error": "0",
            "map_layer": {
                "urlFormat": "https://earthengine.googleapis.com/v1/projects/urbananalytics-460415/maps/a76934a73326a11e1b45e36dad37fcff-ac00693e83ceec8946c46e8b64df1e6a/tiles/{z}/{x}/{y}",
                "mapid": "projects/urbananalytics-460415/maps/a76934a73326a11e1b45e36dad37fcff-ac00693e83ceec8946c46e8b64df1e6a",
                "token": ""
            },
            "stats": {
                "mean": 0.05400271733579196,
                "min": -0.0346915315103686,
                "max": 0.5384406528108954,
                "std_dev": 0.06584619775234565
            }
        },
        {
            "uc_name": "Wassanpura",
            "city_name": "Lahore",
            "error": "0",
            "map_layer": {
                "urlFormat": "https://earthengine.googleapis.com/v1/projects/urbananalytics-460415/maps/90194ef490a61a05db001981377169a9-85fe4755c05904f8cee264ade9c4ea10/tiles/{z}/{x}/{y}",
                "mapid": "projects/urbananalytics-460415/maps/90194ef490a61a05db001981377169a9-85fe4755c05904f8cee264ade9c4ea10",
                "token": ""
            },
            "stats": {
                "mean": 0.07177660378727886,
                "min": -0.03322319639930277,
                "max": 0.5241263757850881,
                "std_dev": 0.08537145992705203
            }
        },
        {
            "uc_name": "Darogha Wala",
            "city_name": "Lahore",
            "error": "0",
            "map_layer": {
                "urlFormat": "https://earthengine.googleapis.com/v1/projects/urbananalytics-460415/maps/9a82dec3bf01f95029bbf2e16616821a-87519fe5daf2f1b9a8bc828365f671e3/tiles/{z}/{x}/{y}",
                "mapid": "projects/urbananalytics-460415/maps/9a82dec3bf01f95029bbf2e16616821a-87519fe5daf2f1b9a8bc828365f671e3",
                "token": ""
            },
            "stats": {
                "mean": 0.25616996680031284,
                "min": -0.03066410782909222,
                "max": 0.6689206952238446,
                "std_dev": 0.172226768934241
            }
        },
        ......
    ]
    }

    for area_type = "custom"

    Request JSON:
      {
  "area_type": "custom",
  "analysis_type": "thermal",
  "start_date": "2023-06-01",
  "end_date": "2023-06-30",
  "geometry": {
    "type": "Polygon",
    "coordinates": [
      [
        [74.34, 31.52],
        [74.36, 31.52],
        [74.36, 31.54],
        [74.34, 31.54],
        [74.34, 31.52]
      ]
    ]
  }
}

    Response JSON:
    {
    "message": "THERMAL analysis performed",
    "results": [
        {
            "map_layer": {
                "urlFormat": "https://earthengine.googleapis.com/v1/projects/urbananalytics-460415/maps/018c451eb56d325c10c565781fe0092f-a246c833be08584c392279373a756f98/tiles/{z}/{x}/{y}",
                "mapid": "projects/urbananalytics-460415/maps/018c451eb56d325c10c565781fe0092f-a246c833be08584c392279373a756f98",
                "token": ""
            },
            "stats": {
                "mean": 309.369769013796,
                "min": 306.64933646,
                "max": 313.24782407,
                "std_dev": 1.318196261277901
            }
        }
    ]
}

  For area_type = "kml"

  Request JSON:
  {
  "area_type": "kml",
  "analysis_type": "thermal",
  "start_date": "2021-06-01",
  "end_date": "2022-06-10",
  "geometry": {
    "type": "Polygon",
    "coordinates": [
      [
        [74.34, 31.52],
        [74.36, 31.52],
        [74.36, 31.54],
        [74.34, 31.54],
        [74.34, 31.52]
      ]
    ]
  }
}

Response JSON:

{
    "message": "THERMAL analysis performed",
    "results": [
        {
            "map_layer": {
                "urlFormat": "https://earthengine.googleapis.com/v1/projects/urbananalytics-460415/maps/018c451eb56d325c10c565781fe0092f-a246c833be08584c392279373a756f98/tiles/{z}/{x}/{y}",
                "mapid": "projects/urbananalytics-460415/maps/018c451eb56d325c10c565781fe0092f-a246c833be08584c392279373a756f98",
                "token": ""
            },
            "stats": {
                "mean": 309.369769013796,
                "min": 306.64933646,
                "max": 313.24782407,
                "std_dev": 1.318196261277901
            }
        }
    ]
}





    

 Notes for Frontend Developer
All requests must be in JSON format.

For protected routes, include the Authorization header.

Handle errors by checking for keys like "error" in the response.

OTPs are 6-digit numeric codes.

After signup or password reset request, frontend must guide the user to OTP verification.

Let me know if you'd like this in Markdown, PDF, Swagger/OpenAPI format, or embedded directly into your frontend docs.









